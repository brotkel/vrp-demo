{"version":3,"sources":["utils/theme.ts","utils/statusColor.ts","views/Dashboard/Dashboard.tsx","components/IFrame/IFrame.tsx","utils/filterSamplesById.ts","views/Isolated/Isolated.tsx","views/Project/Project.tsx","views/Received/Received.tsx","views/Tested/Tested.tsx","components/App/App.tsx","components/BreadcrumbBar/BreadcrumbBar.tsx","components/FooterBar/FooterBar.tsx","components/HeaderBar/HeaderBar.tsx","components/SideNav/RouterNavLink.tsx","components/SideNav/SideNav.tsx","reportWebVitals.ts","index.tsx"],"names":["bdTheme","createTheme","defaultFontStyle","fontFamily","fontWeight","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","theme","getTheme","statusColor","isIsolated","isTested","type","statusValue","greenDark","yellowDark","redDark","projectList","name","id","lastUpdate","DashboardListItem","item","Stack","horizontal","horizontalAlign","tokens","padding","childrenGap","verticalAlign","Icon","iconName","styles","root","color","style","flexGrow","to","Text","Dashboard","variant","Separator","as","List","items","onRenderCell","StackItem","align","ActionButton","iconProps","flexContainer","flexDirection","IFrame","props","overflow","paddingTop","position","src","title","border","height","left","top","width","filterSamplesById","list","selection","filter","obj","isolatedList","details","label","value","Date","toLocaleDateString","toLocaleTimeString","isolations","embedUri","listColumns","key","minWidth","fieldName","Isolated","useState","selectedSample","setSelectedSample","selectedIsolation","setSelectedIsolation","initialSelection","useMemo","Selection","initialSelection2","useEffect","setIndexSelected","console","log","margin","grow","flexBasis","DetailsList","columns","isHeaderVisible","onActiveItemChanged","setTimeout","selectionMode","SelectionMode","single","Fragment","none","segmentList","link","number","colors","red","yellow","green","ProjectListItem","Project","ResponsiveContainer","BarChart","data","XAxis","dataKey","YAxis","Bar","map","entry","index","Cell","fill","receivedList","Received","testedList","tests","Tested","selectedTest","setSelectedTest","App","ThemeProvider","applyTo","className","data-is-scrollable","path","BreadcrumbStyles","borderBottom","chevron","listItem","navItems","href","text","BreadcrumbLink","textDecoration","paddingRight","BreadcrumbBar","Breadcrumb","focusZoneProps","handleTabKey","maxDisplayedItems","onRenderItem","footerBarStyles","backgroundColor","FooterBar","headerBarStyles","alignItems","justifyContent","HeaderBar","CommandBarButton","Item","justifySelf","IconButton","ariaLabel","Persona","hidePersonaDetails","size","PersonaSize","size32","RouterNavItemCondensed","initialsColor","size24","RouterNavItemExtended","fontSize","lineHeight","textAlign","flexShrink","children","RouterNavLink","boxSizing","display","flexWrap","navStackStyles","navListStyles","borderTop","marginTop","navListStylesCollapsed","navLinkGroups","links","icon","url","navLinkGroupsExpanded","expandedAriaLabel","collapseAriaLabel","SideNav","isNavOpen","setIsNavOpen","onClick","Nav","groups","linkAs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeStyles","initializeIcons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fd15b6e.chunk.js","sourcesContent":["import { createTheme } from '@fluentui/react';\n\nexport const bdTheme = createTheme({\n    defaultFontStyle: {\n        fontFamily: 'Proxima Nova, Calibri, Roboto',\n        fontWeight: 'regular',\n    },\n    palette: {\n        themePrimary: '#0e63af',\n        themeLighterAlt: '#f3f8fc',\n        themeLighter: '#cfe2f2',\n        themeLight: '#a7c9e7',\n        themeTertiary: '#5d9ad0',\n        themeSecondary: '#2373b9',\n        themeDarkAlt: '#0d5a9e',\n        themeDark: '#0b4c86',\n        themeDarker: '#083863',\n        neutralLighterAlt: '#faf9f8',\n        neutralLighter: '#f3f2f1',\n        neutralLight: '#edebe9',\n        neutralQuaternaryAlt: '#e1dfdd',\n        neutralQuaternary: '#d0d0d0',\n        neutralTertiaryAlt: '#c8c6c4',\n        neutralTertiary: '#595959',\n        neutralSecondary: '#373737',\n        neutralPrimaryAlt: '#2f2f2f',\n        neutralPrimary: '#000000',\n        neutralDark: '#151515',\n        black: '#0b0b0b',\n        white: '#ffffff',\n    },\n});","import { getTheme, ITheme } from \"@fluentui/react\";\n\nconst theme: ITheme = getTheme();\n\nexport const statusColor = (isIsolated: boolean, isTested: boolean, type: string = 'color') => {\n    let statusValue = 0;\n\n    if (isIsolated) {\n        statusValue++;\n    }\n\n    if (isTested) {\n        statusValue++;\n    }\n\n    if (type === 'persona') {\n        switch(statusValue) {\n            case 2: return 'darkGreen';\n            case 1: return 'orange';\n            case 0: return 'darkRed';\n            default: return 'gray'\n        }\n    }\n\n    if (type === 'icon') {\n        switch(statusValue) {\n            case 2: return 'skypeCircleCheck';\n            case 1: return 'skypeCircleClock';\n            case 0: return 'skypeCircleMinus';\n            default: return 'CircleRing'\n        }\n    }\n\n    switch(statusValue) {\n        case 2: return theme.palette.greenDark;\n        case 1: return theme.palette.yellowDark;\n        case 0: return theme.palette.redDark;\n        default: return theme.palette.neutralSecondary;\n    }\n}","import { ActionButton, Icon, List, Separator, Stack, StackItem, Text } from '@fluentui/react';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { statusColor } from '../../utils/statusColor';\n\nconst projectList: any[] = [\n    { name: 'Project A', id: 'a', isIsolated: false, isTested: false, lastUpdate: '1-1-2020' },\n    { name: 'Project B', id: 'b', isIsolated: true, isTested: false, lastUpdate: '1-2-2020' },\n    { name: 'Project C', id: 'c', isIsolated: true, isTested: true, lastUpdate: '1-3-2020' },\n    { name: 'Project D', id: 'd', isIsolated: true, isTested: true, lastUpdate: '1-4-2020' },\n    { name: 'Project E', id: 'e', isIsolated: true, isTested: true, lastUpdate: '1-5-2020' },\n]\n\nconst DashboardListItem = (item: any): JSX.Element => {\n    return (\n        <Stack\n            horizontal\n            horizontalAlign='space-between'\n            tokens={ { padding: '.25em 0', childrenGap: 10 } }\n            verticalAlign='center'>\n            <Icon\n                iconName={ statusColor(item.isIsolated, item.isTested, 'icon') }\n                styles={ { root: { color: statusColor(item.isIsolated, item.isTested) } } }\n            />\n            <RouterLink\n                style={ { flexGrow: 1, } }\n                to={ `/vrp-demo/project/${ item.id }` }>\n                <Text>{ item.name }</Text>\n            </RouterLink>\n            <Text>{ item.lastUpdate }</Text>\n        </Stack>\n    );\n};\n\nexport const Dashboard: React.FunctionComponent = () => {\n    return (\n        <Stack>\n            <Text variant={ 'xxLarge' }>\n                Welcome, Heath Balcer!\n            </Text>\n            <Separator />\n            <Text variant={ 'xLarge' } as='h1'>\n                Your 5 most recent reports:\n            </Text>\n            <List\n                items={ projectList }\n                onRenderCell={ DashboardListItem }\n            />\n            <StackItem align='center'>\n                <ActionButton \n                    iconProps={ { iconName: 'ChevronDown' } }\n                    styles={ { flexContainer: { flexDirection: 'row-reverse' } } }>\n                    Load More\n                </ActionButton>\n            </StackItem>\n        </Stack>\n    )\n};","import React from 'react';\n\ninterface IFrameProps {\n    src: string\n    title?: string\n}\n\nexport const IFrame = (props: IFrameProps) => {\n    return (\n        <div style={ { overflow: 'hidden', paddingTop: '56.25%', position: 'relative' } } >\n            <iframe src={props.src} title={props.title} style={ { border: '0', height: '100%', left: '0', position: 'absolute', top: '0', width: '100%' } } />\n        </div>\n    )\n};","import { ISampleList } from \"../types/records\";\n\nexport const filterSamplesById = (list: Array<ISampleList>, selection: ISampleList['id']) => { \n    return list.filter(obj => { return obj.id === selection })[0];\n}","import { DetailsList, IColumn, Selection, SelectionMode, Separator, Stack, Text } from '@fluentui/react';\nimport React, { Dispatch, SetStateAction, useEffect, useMemo, useState } from 'react';\nimport { IFrame } from '../../components/IFrame/IFrame';\nimport { IIsolations, ISampleList } from '../../types/records';\nimport { filterSamplesById } from '../../utils/filterSamplesById';\n\nconst isolatedList: ISampleList[] = [\n    {\n        name: 'Sample A',\n        id: 'a',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '3 mL'} ,\n            { label: 'Aliquots Received', value: 3 },\n            { label: 'Aliquots Remaining' , value: 1 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n        isolations: [\n            {\n                name: 'Sample X',\n                id: 'x',\n                embedUri: 'http://biologicaldynamics.com',\n                details: [\n                    { label: 'Pass/Fail', value: 'Fail', },\n                    { label: 'Sample Volume Isolated', value: '.24mL', },\n                    { label: 'Run ID(s)', value: 'XYZ456' },\n                    { label: 'Isolation Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Isolation Start Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                    { label: 'Isolation End Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Y',\n                id: 'y',\n                embedUri: 'http://msn.com',\n                details: [\n                    { label: 'Pass/Fail', value: 'Fail', },\n                    { label: 'Sample Volume Isolated', value: '.24mL', },\n                    { label: 'Run ID(s)', value: 'XYZ456' },\n                    { label: 'Isolation Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Isolation Start Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                    { label: 'Isolation End Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Z',\n                id: 'z',\n                embedUri: 'http://yahoo.com',\n                details: [\n                    { label: 'Pass/Fail', value: 'Fail', },\n                    { label: 'Sample Volume Isolated', value: '.24mL', },\n                    { label: 'Run ID(s)', value: 'XYZ456' },\n                    { label: 'Isolation Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Isolation Start Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                    { label: 'Isolation End Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            }\n        ]\n    },\n    {\n        name: 'Sample B',\n        id: 'b',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '4 mL'} ,\n            { label: 'Aliquots Received', value: 4 },\n            { label: 'Aliquots Remaining' , value: 2 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n        isolations: [\n            {\n                name: 'Sample X2',\n                id: 'x2',\n                embedUri: 'http://google.com',\n                details: [\n                    { label: 'Pass/Fail', value: 'Fail', },\n                    { label: 'Sample Volume Isolated', value: '.24mL', },\n                    { label: 'Run ID(s)', value: 'XYZ456' },\n                    { label: 'Isolation Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Isolation Start Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                    { label: 'Isolation End Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Y2',\n                id: 'y2',\n                embedUri: 'http://msn.com',\n                details: [\n                    { label: 'Pass/Fail', value: 'Fail', },\n                    { label: 'Sample Volume Isolated', value: '.24mL', },\n                    { label: 'Run ID(s)', value: 'XYZ456' },\n                    { label: 'Isolation Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Isolation Start Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                    { label: 'Isolation End Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Z3',\n                id: 'z3',\n                embedUri: 'http://yahoo.com',\n                details: [\n                    { label: 'Pass/Fail', value: 'Fail', },\n                    { label: 'Sample Volume Isolated', value: '.24mL', },\n                    { label: 'Run ID(s)', value: 'XYZ456' },\n                    { label: 'Isolation Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Isolation Start Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                    { label: 'Isolation End Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            }\n        ]\n    }\n]\n\nconst listColumns: IColumn[] = [ { key: 'column1', name: 'Name', minWidth: 0, fieldName: 'name' } ]\n\nexport const Isolated: React.FunctionComponent = () => {\n    const [selectedSample, setSelectedSample]: [ISampleList['id'], Dispatch<SetStateAction<ISampleList['id']>>] = useState(isolatedList[0].id);\n    const [selectedIsolation, setSelectedIsolation]: [IIsolations['id'], Dispatch<SetStateAction<IIsolations['id']>>] = useState(isolatedList[0].isolations![0].id);\n\n    const initialSelection: Selection = useMemo(() => new Selection(), []);\n    const initialSelection2: Selection = useMemo(() => new Selection(), []);\n\n    useEffect(() => {\n        initialSelection.setIndexSelected(0, true, false);\n        initialSelection2.setIndexSelected(0, true, false);\n    }, [initialSelection, initialSelection2]);\n    \n    console.log(filterSamplesById(filterSamplesById(isolatedList, selectedSample).isolations!, selectedIsolation).embedUri);\n\n    return (        \n        <Stack>\n            <Stack horizontal horizontalAlign={ 'space-between' }>\n                <Text variant={ 'xxLarge' } as='h1' styles={ { root: { margin: 0 } } }>\n                    Project A\n                </Text>\n                <Text variant={ 'xLarge' }>\n                    Last Update: 7/12/2021\n                </Text>\n            </Stack>\n            <Separator />\n            <Text variant={ 'xLarge' } as='h2'>\n                Samples Isolated\n            </Text>\n            <Stack \n                horizontal\n                horizontalAlign={ 'space-between' }\n                tokens={ { childrenGap: 10 } }\n                >\n                <Stack grow={ 1 } styles={ { root: { flexBasis: 0 } } }>\n                    <Text as='h3'>\n                        Here is a list of your isolated samples:\n                    </Text>\n                    <DetailsList\n                        columns={ listColumns }\n                        isHeaderVisible={ false }\n                        items={ isolatedList }\n                        onActiveItemChanged={ (item) => { \n                            setSelectedSample(item.id);\n                            setSelectedIsolation(item.isolations[0].id)\n                            setTimeout(() => initialSelection2.setIndexSelected(0, true, false), 0)\n                        } }\n                        selectionMode={ SelectionMode.single }\n                        selection={ initialSelection }\n                    />\n                </Stack>\n                <Stack grow={ 1 } styles={ { root: { flexBasis: 0 } } }>\n                    <Text as='h3'>\n                        Here is a list of your { filterSamplesById(isolatedList, selectedSample).name } isolation runs:\n                    </Text>\n                    <DetailsList\n                        columns={ listColumns }\n                        isHeaderVisible={ false }\n                        items={ filterSamplesById(isolatedList, selectedSample).isolations! }\n                        onActiveItemChanged={ (item) => setSelectedIsolation(item.id) }\n                        selectionMode={ SelectionMode.single }\n                        selection={ initialSelection2 }\n                    />\n                </Stack>\n                <Stack grow={ 2 } styles={ { root: { flexBasis: 0 } } }>\n                    { selectedSample &&\n                        <React.Fragment>\n                            <Text as='h3'>\n                                { filterSamplesById(filterSamplesById(isolatedList, selectedSample).isolations!, selectedIsolation).name } Details\n                            </Text>\n                            <DetailsList \n                                items={ filterSamplesById(filterSamplesById(isolatedList, selectedSample).isolations!, selectedIsolation).details }\n                                isHeaderVisible={ false }\n                                selectionMode={ SelectionMode.none }\n                            />\n                        </React.Fragment>\n                    }\n                </Stack>\n            </Stack>\n            { filterSamplesById(filterSamplesById(isolatedList, selectedSample).isolations!, selectedIsolation).embedUri &&\n                <IFrame src={ filterSamplesById(filterSamplesById(isolatedList, selectedSample).isolations!, selectedIsolation).embedUri!} />\n            }\n        </Stack>\n    )\n};\n","import { Stack, Text, Separator, List, Icon, StackItem, ITheme, getTheme } from '@fluentui/react';\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Bar, BarChart, Cell, ResponsiveContainer, XAxis, YAxis } from 'recharts';\n\n\nimport { statusColor } from '../../utils/statusColor';\n\nconst segmentList: any[] = [\n    { name: 'Samples Received', link: 'received', isIsolated: false, isTested: false, number: 10 },\n    { name: 'Samples Isolated', link: 'isolated', isIsolated: true, isTested: false, number: 5 },\n    { name: 'Samples Tested', link: 'tested', isIsolated: true, isTested: true, number: 2 },\n]\nconst theme: ITheme = getTheme();\n\nconst colors = [theme.palette.red, theme.palette.yellow, theme.palette.green,]\n\nconst ProjectListItem = (item: any): JSX.Element => {\n    return (\n        <Stack\n            horizontal\n            horizontalAlign='space-between'\n            tokens={ { padding: '.25em 0', childrenGap: 10 } }\n            verticalAlign='center'>\n            <Icon\n                iconName={ statusColor(item.isIsolated, item.isTested, 'icon') }\n                styles={ { root: { color: statusColor(item.isIsolated, item.isTested) } } }\n            />\n            <RouterLink\n                style={ { flexGrow: 1, } }\n                to={ `/vrp-demo/project/a/${ item.link }` }>\n                <Text>{ item.name }</Text>\n            </RouterLink>\n            <Text>\n                { item.number }\n            </Text>\n        </Stack>\n    );\n};\n\nexport const Project: React.FunctionComponent = () => {\n    return (        \n        <Stack>\n            <Stack horizontal horizontalAlign={ 'space-between' }>\n                <Text variant={ 'xxLarge' } as='h1' styles={ { root: { margin: 0 } } }>\n                    Project A\n                </Text>\n                <Text variant={ 'xLarge' }>\n                    Last Update: 7/12/2021\n                </Text>\n            </Stack>\n            <Separator />\n            <Stack \n                horizontal \n                horizontalAlign={ 'space-between' }\n                tokens={ { childrenGap: 10 } }\n            >\n                <StackItem grow={ 1 } styles={ { root: { flexBasis: 0 } } }>\n                    <Stack>\n                        <Text variant={ 'xLarge' } as='h2'>\n                            Summary:\n                        </Text>\n                        <Text as='h3'>\n                            Select a segment to drill down.\n                        </Text>\n                        <List\n                            items={ segmentList }\n                            onRenderCell={ ProjectListItem }\n                        />\n                    </Stack>\n                </StackItem>\n                <StackItem grow={ 1 } styles={ { root: { flexBasis: 0, height: '50vh' } } }>\n                    <ResponsiveContainer width='100%'>\n                        <BarChart data={ segmentList }>\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Bar dataKey=\"number\">\n                                {segmentList.map((entry, index) => (\n                                    <Cell key={`cell-${index}`} fill={colors[index % 20]} />\n                                ))}\n                            </Bar>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </StackItem>\n            </Stack>\n        </Stack>\n    )\n};\n","import { DetailsList, IColumn, Selection, SelectionMode, Separator, Stack, Text } from '@fluentui/react';\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nimport { ISampleList } from '../../types/records';\nimport { filterSamplesById } from '../../utils/filterSamplesById';\n\nconst receivedList: ISampleList[] = [\n    {\n        name: 'Sample A',\n        id: 'a',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '3 mL'} ,\n            { label: 'Aliquots Received', value: 3 },\n            { label: 'Aliquots Remaining' , value: 1 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n    },\n    {\n        name: 'Sample B',\n        id: 'b',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '4 mL'} ,\n            { label: 'Aliquots Received', value: 4 },\n            { label: 'Aliquots Remaining' , value: 2 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n    },\n    {\n        name: 'Sample C',\n        id: 'c',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '4 mL'} ,\n            { label: 'Aliquots Received', value: 4 },\n            { label: 'Aliquots Remaining' , value: 2 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n    },\n    {\n        name: 'Sample D',\n        id: 'd',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '4 mL'} ,\n            { label: 'Aliquots Received', value: 4 },\n            { label: 'Aliquots Remaining' , value: 2 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n    }\n]\n\nconst listColumns: IColumn[] = [ { key: 'column1', name: 'Name', minWidth: 0, fieldName: 'name' } ]\n\nexport const Received: React.FunctionComponent = () => {\n    const [selectedSample, setSelectedSample]: [ISampleList['id'], Dispatch<SetStateAction<ISampleList['id']>>] = useState(receivedList[0].id);\n    const initialSelection: Selection = new Selection();\n    useEffect(() => {\n        initialSelection.setIndexSelected(0, true, false);\n    });\n\n    return (        \n        <Stack>\n            <Stack horizontal horizontalAlign={ 'space-between' }>\n                <Text variant={ 'xxLarge' } as='h1' styles={ { root: { margin: 0 } } }>\n                    Project A\n                </Text>\n                <Text variant={ 'xLarge' }>\n                    Last Update: 7/12/2021\n                </Text>\n            </Stack>\n            <Separator />\n            <Text variant={ 'xLarge' } as='h2'>\n                Samples Received\n            </Text>\n            <Stack \n                horizontal\n                horizontalAlign={ 'space-between' }\n                tokens={ { childrenGap: 10 } }\n                >\n                <Stack grow={ 1 } styles={ { root: { flexBasis: 0 } } }>\n                    <Text as='h3'>\n                        Here is a list of your received samples:\n                    </Text>\n                    <DetailsList\n                        columns={ listColumns }\n                        isHeaderVisible={ false }\n                        items={ receivedList }\n                        onActiveItemChanged={ (item) => setSelectedSample(item.id) }\n                        selectionMode={ SelectionMode.single }\n                        selection={ initialSelection }\n                    />\n                </Stack>\n                <Stack grow={ 1 } styles={ { root: { flexBasis: 0 } } }>\n                    { selectedSample &&\n                        <React.Fragment>\n                            <Text as='h3'>\n                                { filterSamplesById(receivedList, selectedSample).name } Details\n                            </Text>\n                            <DetailsList \n                                items={ filterSamplesById(receivedList, selectedSample).details }\n                                isHeaderVisible={ false }\n                                selectionMode={ SelectionMode.none }\n                            />\n                        </React.Fragment>\n                    }\n                </Stack>\n            </Stack>\n        </Stack>\n    )\n};\n","import { DetailsList, IColumn, Selection, SelectionMode, Separator, Stack, Text } from '@fluentui/react';\nimport React, { Dispatch, SetStateAction, useEffect, useMemo, useState } from 'react';\nimport { IFrame } from '../../components/IFrame/IFrame';\nimport { ITests, ISampleList } from '../../types/records';\nimport { filterSamplesById } from '../../utils/filterSamplesById';\n\nconst testedList: ISampleList[] = [\n    {\n        name: 'Sample A',\n        id: 'a',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '3 mL'} ,\n            { label: 'Aliquots Received', value: 3 },\n            { label: 'Aliquots Remaining' , value: 1 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n        tests: [\n            {\n                name: 'Average',\n                id: 'average',\n                details: [\n                    { label: 'Sample Type', value: 'Exo-Proteins', },\n                    { label: 'Panel Tested', value: 'CBP1', },\n                    { label: 'Plate ID', value: 'ABC1234' },\n                    { label: 'Test Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Test Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample X',\n                id: 'x',\n                embedUri: 'http://google.com',\n                details: [\n                    { label: 'Sample Type', value: 'Exo-Proteins', },\n                    { label: 'Panel Tested', value: 'CBP1', },\n                    { label: 'Plate ID', value: 'ABC1234' },\n                    { label: 'Test Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Test Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Y',\n                id: 'y',\n                embedUri: 'http://msn.com',\n                details: [\n                    { label: 'Sample Type', value: 'Exo-Proteins', },\n                    { label: 'Panel Tested', value: 'CBP1', },\n                    { label: 'Plate ID', value: 'ABC1234' },\n                    { label: 'Test Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Test Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Z',\n                id: 'z',\n                embedUri: 'http://yahoo.com',\n                details: [\n                    { label: 'Sample Type', value: 'Exo-Proteins', },\n                    { label: 'Panel Tested', value: 'CBP1', },\n                    { label: 'Plate ID', value: 'ABC1234' },\n                    { label: 'Test Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Test Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            }\n        ]\n    },\n    {\n        name: 'Sample B',\n        id: 'b',\n        details: [\n            { label: 'Date Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n            { label: 'Time Received',  value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n            { label: 'Volume Received', value: '4 mL'} ,\n            { label: 'Aliquots Received', value: 4 },\n            { label: 'Aliquots Remaining' , value: 2 },\n            { label: 'Freezer Location', value: 'Freezer A, Shelf 1, Box 3' }\n        ],\n        tests: [\n            {\n                name: 'Average',\n                id: 'average',\n                details: [\n                    { label: 'Sample Type', value: 'Exo-Proteins', },\n                    { label: 'Panel Tested', value: 'CBP1', },\n                    { label: 'Plate ID', value: 'ABC1234' },\n                    { label: 'Test Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Test Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Y2',\n                id: 'y2',\n                embedUri: 'http://msn.com',\n                details: [\n                    { label: 'Sample Type', value: 'Exo-Proteins', },\n                    { label: 'Panel Tested', value: 'CBP1', },\n                    { label: 'Plate ID', value: 'ABC1234' },\n                    { label: 'Test Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Test Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            },\n            {\n                name: 'Sample Z3',\n                id: 'z3',\n                embedUri: 'http://yahoo.com',\n                details: [\n                    { label: 'Sample Type', value: 'Exo-Proteins', },\n                    { label: 'Panel Tested', value: 'CBP1', },\n                    { label: 'Plate ID', value: 'ABC1234' },\n                    { label: 'Test Date', value: new Date('2019-08-24T14:15:22Z').toLocaleDateString() },\n                    { label: 'Test Time', value: new Date('2019-08-24T14:15:22Z').toLocaleTimeString() },\n                ]\n            }\n        ]\n    }\n]\n\nconst listColumns: IColumn[] = [ { key: 'column1', name: 'Name', minWidth: 0, fieldName: 'name' } ]\n\nexport const Tested: React.FunctionComponent = () => {\n    const [selectedSample, setSelectedSample]: [ISampleList['id'], Dispatch<SetStateAction<ISampleList['id']>>] = useState(testedList[0].id);\n    const [selectedTest, setSelectedTest]: [ITests['id'], Dispatch<SetStateAction<ITests['id']>>] = useState(testedList[0].tests![0].id);\n\n    const initialSelection: Selection = useMemo(() => new Selection(), []);\n    const initialSelection2: Selection = useMemo(() => new Selection(), []);\n\n    useEffect(() => {\n        initialSelection.setIndexSelected(0, true, false);\n        initialSelection2.setIndexSelected(0, true, false);\n    }, [initialSelection, initialSelection2]);\n    \n    return (        \n        <Stack>\n            <Stack horizontal horizontalAlign={ 'space-between' }>\n                <Text variant={ 'xxLarge' } as='h1' styles={ { root: { margin: 0 } } }>\n                    Project A\n                </Text>\n                <Text variant={ 'xLarge' }>\n                    Last Update: 7/12/2021\n                </Text>\n            </Stack>\n            <Separator />\n            <Text variant={ 'xLarge' } as='h2'>\n                Samples Tested\n            </Text>\n            <Stack \n                horizontal\n                horizontalAlign={ 'space-between' }\n                tokens={ { childrenGap: 10 } }\n                >\n                <Stack grow={ 1 } styles={ { root: { flexBasis: 0 } } }>\n                    <Text as='h3'>\n                        Here is a list of your tested samples:\n                    </Text>\n                    <DetailsList\n                        columns={ listColumns }\n                        isHeaderVisible={ false }\n                        items={ testedList }\n                        onActiveItemChanged={ (item) => { \n                            setSelectedSample(item.id);\n                            setSelectedTest(item.tests[0].id)\n                            setTimeout(() => initialSelection2.setIndexSelected(0, true, false), 0)\n                        } }\n                        selectionMode={ SelectionMode.single }\n                        selection={ initialSelection }\n                    />\n                </Stack>\n                <Stack grow={ 1 } styles={ { root: { flexBasis: 0 } } }>\n                    <Text as='h3'>\n                        Here is a list of your { filterSamplesById(testedList, selectedSample).name } test results:\n                    </Text>\n                    <DetailsList\n                        columns={ listColumns }\n                        isHeaderVisible={ false }\n                        items={ filterSamplesById(testedList, selectedSample).tests! }\n                        onActiveItemChanged={ (item) => setSelectedTest(item.id) }\n                        selectionMode={ SelectionMode.single }\n                        selection={ initialSelection2 }\n                    />\n                </Stack>\n                <Stack grow={ 2 } styles={ { root: { flexBasis: 0 } } }>\n                    { selectedSample &&\n                        <React.Fragment>\n                            <Text as='h3'>\n                                { filterSamplesById(filterSamplesById(testedList, selectedSample).tests!, selectedTest).name } Details\n                            </Text>\n                            <DetailsList \n                                items={ filterSamplesById(filterSamplesById(testedList, selectedSample).tests!, selectedTest).details }\n                                isHeaderVisible={ false }\n                                selectionMode={ SelectionMode.none }\n                            />\n                        </React.Fragment>\n                    }\n                </Stack>\n            </Stack>\n            { filterSamplesById(filterSamplesById(testedList, selectedSample).tests!, selectedTest).embedUri &&\n                <IFrame src={ filterSamplesById(filterSamplesById(testedList, selectedSample).tests!, selectedTest).embedUri! } />\n            }\n        </Stack>\n    )\n};\n","import React from 'react';\nimport { ThemeProvider } from '@fluentui/react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { SideNav, BreadcrumbBar, HeaderBar, FooterBar } from '../';\nimport { bdTheme } from '../../utils/theme';\nimport { Dashboard, Isolated, Project, Received, Tested } from '../../views';\n\nimport './App.css';\n\n\nexport const App: React.FunctionComponent = () => {\n    return (\n        <ThemeProvider applyTo='body' theme={ bdTheme }>\n            <div className=\"wrapper\">\n                <header className=\"main-head\">\n                    <HeaderBar />\n                </header>\n                <div className=\"main-nav\">\n                    <SideNav />\n                </div>\n                <div className=\"breadcrumb\">\n                    <BreadcrumbBar />\n                </div>\n                <main className=\"content\" style={ { padding: '1em' } } data-is-scrollable=\"true\">\n                    <Switch>\n                        <Route path=\"/vrp-demo/project/:projectId/received\">\n                            <Received />\n                        </Route>\n                        <Route path=\"/vrp-demo/project/:projectId/isolated\">\n                            <Isolated />\n                        </Route>\n                        <Route path=\"/vrp-demo/project/:projectId/tested\">\n                            <Tested />\n                        </Route>\n                        <Route path=\"/vrp-demo/project/:projectId\">\n                            <Project />\n                        </Route>\n                        <Route path=\"/\">\n                            <Dashboard />\n                        </Route>\n                    </Switch>\n                </main>\n                <footer className=\"main-footer\">\n                    <FooterBar />\n                </footer>\n            </div>\n        </ThemeProvider>\n    );\n};\n","import { Breadcrumb, getTheme, IBreadcrumbItem, IBreadcrumbStyles, Icon, ITheme, Text } from \"@fluentui/react\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst theme: ITheme = getTheme();\n\nconst BreadcrumbStyles: Partial<IBreadcrumbStyles> = {\n    root: {\n        borderBottom: `1px solid ${ theme.palette.neutralQuaternary }`,\n        padding: '0px 1em',\n        height: '28px',\n    },\n    chevron: {\n        padding: '0 .5em',\n    },\n    listItem: {\n        fontWeight: 'bold',\n    }\n}\n\nconst navItems: IBreadcrumbItem[] = [\n    {\n        href: '/vrp-demo/',\n        key: '0',\n        text:'Dashboard',\n    },\n    {\n        href: '/vrp-demo/project/a',\n        key: 'A',\n        text:'Project A',\n    },\n    {\n        href: '/vrp-demo/project/a/isolation',\n        key: 'A1',\n        text:'Isolation',\n    },\n]\n\nconst BreadcrumbLink = (props: any) => {\n    return (\n        <RouterLink\n            to={ props.href }\n            style={ { textDecoration: 'none', } } >\n            { props.key === \"0\" &&\n                <Icon \n                    iconName='Home'\n                    style={ { paddingRight: '.25em', position: 'relative', top: '2px' } }\n                /> \n            }\n            <Text>\n                { props.text }\n            </Text>\n        </RouterLink>\n    );\n}\n\nexport const BreadcrumbBar: React.FunctionComponent = () => {\n    return (\n        <Breadcrumb\n            focusZoneProps={{ handleTabKey: 1 }}\n            items={ navItems }\n            maxDisplayedItems={ 3 }\n            onRenderItem={ BreadcrumbLink }\n            styles={ BreadcrumbStyles }\n        />\n    )\n};","import { getTheme, IStackStyles, Stack, Text } from \"@fluentui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst theme = getTheme();\n\nconst footerBarStyles: IStackStyles = {\n    root: {\n        backgroundColor: theme.palette.themePrimary,\n        height: '100%',\n    },\n}\n\nexport const FooterBar: React.FunctionComponent = () => {\n    return (\n        <Stack\n            horizontal\n            horizontalAlign='space-between'\n            styles={ footerBarStyles }\n            tokens={ { padding: '0 1em' } }\n            verticalAlign='center'>\n            <Text styles={ { root: { color: theme.palette.white } } }>\n                Want to read our <RouterLink to=\"/vrp-demo/privacy-policy\" style={ { color: theme.palette.white } }>Privacy Policy</RouterLink>?\n            </Text>\n            <Text styles={ { root: { color: theme.palette.white } } }>\n                &copy; 2021 Biological Dynamics\n            </Text>\n        </Stack>\n    )\n};","import { CommandBarButton, getTheme, IconButton, IStackStyles, Persona, PersonaSize, Stack } from \"@fluentui/react\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst theme = getTheme();\n\nconst headerBarStyles: IStackStyles = {\n    root: {\n        alignItems: 'center',\n        backgroundColor: theme.palette.themePrimary,\n        color: theme.palette.white,\n        flexDirection: 'row',\n        height: '100%',\n        justifyContent: 'space-between',\n        width: '100%',\n    }\n}\n\nexport const HeaderBar: React.FunctionComponent = () => {\n    return (\n        <Stack\n            styles={ headerBarStyles }>\n            <RouterLink to='/vrp-demo/' style={ { height: '100%' } }>\n                <CommandBarButton\n                    iconProps={ { iconName: 'Waffle', styles: { root: { color: theme.palette.white } } } }\n                    styles={ { root: { backgroundColor: theme.palette.themePrimary, color: theme.palette.white, height: '100%' } } }\n                    text=\"Biological Dynamics VRP\"\n                />\n            </RouterLink>\n            <Stack.Item\n                styles={ { root: { justifySelf: 'end' } } } >\n                <Stack\n                    horizontal\n                    horizontalAlign='space-between'\n                    tokens={ { padding: '0 1em 0 0', childrenGap: 10 } }\n                >\n                    <IconButton \n                        ariaLabel='Help'\n                        iconProps={ { iconName: 'FeedbackRequestSolid', styles: { root: { color: theme.palette.white } } } }\n                        title='Help'\n                    />\n                    <IconButton \n                        ariaLabel='Log Out'\n                        iconProps={ { iconName: 'Leave', styles: { root: { color: theme.palette.white } } } }\n                        title='Log Out'\n                    />\n                    <Persona\n                        hidePersonaDetails={ true }\n                        text='Heath Balcer'\n                        size={ PersonaSize.size32 }\n                    />\n                </Stack>\n            </Stack.Item>\n        </Stack>\n    )\n};","import { Icon, Persona, PersonaSize } from \"@fluentui/react\"\nimport React from \"react\"\nimport { Link as RouterLink } from \"react-router-dom\"\nimport { statusColor } from \"../../utils/statusColor\"\n\nconst RouterNavItemCondensed = (props: any) => {\n    return (\n        <Persona\n            hidePersonaDetails={ true }\n            initialsColor={ statusColor(props.link.isIsolated, props.link.isTested, 'persona') }\n            text={ props.title }\n            size={ PersonaSize.size24 }\n        />\n    )\n}\n\nconst RouterNavItemExtended = (props: any) => {\n    return (\n        <React.Fragment>\n            { props.iconProps.iconName && \n                <Icon \n                    className='ms-Icon ms-Button-icon' { ...props.iconProps}\n                    style={ { fontSize: '16px', margin: '0px 4px', height: '16px', lineHeight: '16px', textAlign: 'center', flexShrink: 0} } /> \n            }\n            { props.children }\n        </React.Fragment>\n    )\n}\n\n\nexport const RouterNavLink = (props: any) => {\n    return (\n        <RouterLink \n            className={ `${props.className} ms-Button ms-Button--action ms-Button--command` }\n            style={ { boxSizing: 'border-box', } }\n            title={ props.title }\n            to={ props.href } >\n            <span \n                className='ms-Button-flexContainer'\n                style={ { display: 'flex', height: '100%', flexWrap: 'nowrap', justifyContent: 'flex-start', alignItems: 'center', } } >\n                \n                { props.iconProps.iconName === 'FullCircleMask' ? <RouterNavItemCondensed {...props} /> : <RouterNavItemExtended {...props} /> }\n\n            </span>\n        </RouterLink>\n    )\n}","import { getTheme, IconButton, INavLinkGroup, Nav, Stack } from '@fluentui/react';\nimport React, { useState } from 'react';\nimport { RouterNavLink } from './RouterNavLink';\n\nconst theme = getTheme();\n\nconst navStackStyles = {\n    root: {\n        backgroundColor: theme.palette.neutralLight,\n        height: '100%',\n    }\n}\n\nconst navListStyles = {\n    root: {\n        borderTop: `1px solid ${ theme.palette.neutralQuaternary }`,\n        marginTop: '.5em',\n        paddingTop: '1em',\n    },\n};\n\nconst navListStylesCollapsed = {\n    ...navListStyles,\n    link: {\n        paddingRight: '3px',\n    }\n}\n\nconst navLinkGroups: INavLinkGroup[] = [\n    {\n        links: [\n            {\n                ariaLabel: 'Home',\n                icon: 'Home',\n                name: '',\n                url: '/',\n            },\n            {\n                iconProps: {\n                    iconName: 'FullCircleMask',\n                },\n                name: 'A',\n                url: '/vrp-demo/project/a',\n                isIsolated: true,\n                isTested: true,\n            },\n            {\n                iconProps: {\n                    iconName: 'FullCircleMask',\n                },\n                name: 'B',\n                url: '/vrp-demo/project/b',\n                isIsolated: true,\n                isTested: false,\n            },\n            {\n                iconProps: {\n                    iconName: 'FullCircleMask',\n                },\n                name: 'C',\n                url: '/vrp-demo/project/c',\n                isIsolated: false,\n                isTested: false,\n            }\n        ]\n    }\n]\n\nconst navLinkGroupsExpanded: INavLinkGroup[] = [\n    {\n        links: [\n            {\n                name: 'Dashboard',\n                icon: 'Home',\n                url: '/',\n            },\n            {\n                name: 'Project A',\n                url: '/vrp-demo/project/a',\n                expandedAriaLabel: 'Expand Project A',\n                collapseAriaLabel: 'Collapse Project A',\n                links: [\n                    {\n                        icon: 'CircleRing',\n                        name: 'Received',\n                        url: '/vrp-demo/project/a/received',\n                    },\n                    {\n                        icon: 'CircleRing',\n                        name: 'Isolated',\n                        url: '/vrp-demo/project/a/isolated',\n                    },\n                    {\n                        icon: 'CircleRing',\n                        name: 'Tested',\n                        url: '/vrp-demo/project/a/tested',\n                    },\n                ]\n            },\n            {\n                name: 'Project B',\n                url: '/vrp-demo/project/b',\n                expandedAriaLabel: 'Expand Project B',\n                collapseAriaLabel: 'Collapse Project B',\n                links: [\n                    {\n                        icon: 'CircleRing',\n                        name: 'Received',\n                        url: '/vrp-demo/project/b/received',\n                    },\n                    {\n                        icon: 'CircleRing',\n                        name: 'Isolated',\n                        url: '/vrp-demo/project/b/isolated',\n                    },\n                    {\n                        icon: 'CircleRing',\n                        name: 'Tested',\n                        url: '/vrp-demo/project/b/tested',\n                    },\n                ]\n            },\n            {\n                name: 'Project C',\n                url: '/vrp-demo/project/C',\n                expandedAriaLabel: 'Expand Project C',\n                collapseAriaLabel: 'Collapse Project C',\n                links: [\n                    {\n                        icon: 'CircleRing',\n                        name: 'Received',\n                        url: '/vrp-demo/project/c/received',\n                    },\n                    {\n                        icon: 'CircleRing',\n                        name: 'Isolated',\n                        url: '/vrp-demo/project/c/isolated',\n                    },\n                    {\n                        icon: 'CircleRing',\n                        name: 'Tested',\n                        url: '/vrp-demo/project/c/tested',\n                    },\n                ]\n            }\n        ]\n    }\n]\n\nexport const SideNav: React.FunctionComponent = () => {\n    const [isNavOpen, setIsNavOpen] = useState(false);\n\n    return (\n        <Stack\n            styles={ navStackStyles }>\n            <IconButton \n                iconProps={ { iconName: 'GlobalNavButton' } }\n                title=\"Open Navigation\"\n                onClick={() => setIsNavOpen(!isNavOpen)}\n            />\n            <Stack.Item grow={ 1 }>\n                <Nav\n                    groups={ isNavOpen ? navLinkGroupsExpanded : navLinkGroups }\n                    linkAs={ RouterNavLink }\n                    styles={ isNavOpen ? navListStyles : navListStylesCollapsed }\n                />\n            </Stack.Item>\n            <Stack.Item>\n                <Stack\n                    horizontal={ isNavOpen }\n                    horizontalAlign='space-between'\n                    styles={ { root: { borderTop: `1px solid ${ theme.palette.neutralQuaternary }`} } }\n                >\n                    <IconButton \n                        iconProps={ { iconName: 'FeedbackRequestSolid' } }\n                        title='Help'\n                    />\n                    <IconButton \n                        iconProps={ { iconName: 'Leave' } }\n                        title='Log Out'\n                    />\n                </Stack>\n            </Stack.Item>\n        </Stack>\n    )\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './components';\nimport { mergeStyles } from '@fluentui/react';\nimport { initializeIcons } from '@fluentui/react/lib/Icons';\nimport reportWebVitals from './reportWebVitals';\n\n// Inject some global styles\nmergeStyles({\n  ':global(body,html,#root)': {\n    margin: 0,\n    padding: 0,\n    height: '100vh',\n    boxSizing: 'border-box',\n  },\n});\n\ninitializeIcons();\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}